{'Q1a': 1.970416294395752, 'Q1b': 2.051966103395068, 'Q2': [2.666035950804163, 2.1542691579943236, 2.0280931357090237], 'Q3a': [[1, 4, 4], [1, 4, 4, 4]], 'Q3b': [1.5608319121482281, 1.5409512373315777, 1.5396484853948444], 'Q4a': [[1, 4, 4, 4, 4, 5, 4.2, 4.2, 4.2, 4.2, 4.2], [1, 0, 4, 0, 4, 0, 4, 0, 4, 0, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]], 'Q4b': [1.5480131297119455, 1.5354064599216093], 'Q5a': [1, 121, 4, 0], 'Q5b': [2384, 168945, 86232, 3615, 0.470265288006232], 'Q6a': [0, 0, 0, 0, 0, 1, 75, 1, 0], 'Q6b': 0.17025083612040134, 'Q7': [0.13345081097468545, 0.1329392147946036, 0.14439139002576928, 0.14268606942549644, 0.14268606942549644, 0.1, 0.2128248428558026], 'Q8': 1.8164934412791371, 'Q9': [1.742012484444442, 2.052681872005889, 1.452063234864505], 'Q10': ('\nI change the prediction function by adding some judgements to handle the cold-start problem. In the original prediction function,\nIf the item does not exist in the train dataset, it will return ratingMean as the prediction of the rating of this item. However, this is\nnot exact. In new prediction function, when item does not exist in the train dataset, it will give the prediction of the rating of this item\nbased on the rating of the user to all the items which he or she has made a rating in the train dataset. Therefore, we based on the information\nof that user to other items to predict the rating of the new test item. This will be much more creditable than just using the ratingMean.\n', 1.6696633366192306)}
